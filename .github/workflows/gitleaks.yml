name: gitleaks
on:
  push:
  pull_request:

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Gitleaks über Docker laufen lassen (unabhängig von Action-Flags)
      - name: Run gitleaks via docker (produce SARIF)
        run: |
          set +e
          docker run --rm \
            -v "$PWD:/repo" \
            --workdir /repo \
            ghcr.io/gitleaks/gitleaks:latest detect \
              --no-banner --redact --no-git \
              --config .gitleaks.toml \
              --report-format sarif \
              --report-path gitleaks.sarif
          echo "gitleaks exit code: $?"

      # Falls gitleaks nichts geschrieben hat: leere, gültige SARIF erzeugen
      - name: Ensure SARIF exists
        run: |
          if [ ! -f gitleaks.sarif ]; then
            echo '{
              "version": "2.1.0",
              "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
              "runs": [{
                "tool": {"driver": {"name": "gitleaks", "version": "latest"}},
                "results": []
              }]
            }' > gitleaks.sarif
          fi
          ls -l gitleaks.sarif

      - name: Upload SARIF to code scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks.sarif

      - name: Upload SARIF as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-sarif
          path: gitleaks.sarif
